name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build:
    runs-on: ubuntu-latest
    environment: GoAuthENV
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: go build -v ./...

  Test:
    needs: Build
    runs-on: ubuntu-latest
    environment: GoAuthENV
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Wait for PostgreSQL to start
      run: |
        until nc -z localhost 5432; do sleep 1; done

    - name: Test
      env:
        JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
        JWT_ACCESS_EXPIRATION_HOURS: ${{ secrets.JWT_ACCESS_EXPIRATION_HOURS }}
        JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
        JWT_REFRESH_EXPIRATION_HOURS: ${{ secrets.JWT_REFRESH_EXPIRATION_HOURS }}
        POSTGRES_DSN: ${{ format('user={0} password={1} host=localhost port=5432 dbname={2}', secrets.POSTGRES_USER, secrets.POSTGRES_PASSWORD, secrets.POSTGRES_DB) }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        MAIL_CONFIRMATION: ${{ secrets.MAIL_CONFIRMATION }}
        TOKEN_SECRET1: ${{ secrets.TOKEN_SECRET1 }}
        TOKEN_SECRET2: ${{ secrets.TOKEN_SECRET2 }}
        GOAUTH_ADMIN_SECRET: ${{ secrets.GOAUTH_ADMIN_SECRET }}
      run: go test -v ./...

  Deploy:
    needs: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push QFT Api to docker:latest
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/goauth:latest
        file: Dockerfile
        context: .

    - name: Build and push QFT Api to docker:${{ github.sha }}
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/goauth:${{ github.sha }}
        file: Dockerfile
        context: .